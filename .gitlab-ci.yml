stages:
  - build
  - release
 

# ### Define variables
variables:
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}"
  FILE_NAME: "Th3Essential_${CI_COMMIT_TAG}.zip"
  URL_FILE: "${PACKAGE_REGISTRY_URL}/${CI_COMMIT_TAG}/${FILE_NAME}"
  # 1) Name of directory where restore and build objects are stored.
  OBJECTS_DIRECTORY: 'obj'
  # 2) Name of directory used for keeping restored dependencies.
  NUGET_PACKAGES_DIRECTORY: '.nuget'
  # 3) A relative path to the source code from project repository root.
  # NOTE: Please edit this path so it matches the structure of your project!
  SOURCE_CODE_PATH: 'Th3Essentials/'
  VINTAGE_STORY: '/VintageStory'
  SERVER_TYPE: 'stable'
  SERVER_VERSION: '1.19.0-rc.6'

cache:
  # Per-stage and per-branch caching.
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
  paths:
    # Specify three paths that should be cached:
    #
    # 1) Main JSON file holding information about package dependency tree, packages versions,
    # frameworks etc. It also holds information where to the dependencies were restored.
    - '$SOURCE_CODE_PATH$OBJECTS_DIRECTORY/project.assets.json'
    # 2) Other NuGet and MSBuild related files. Also needed.
    - '$SOURCE_CODE_PATH$OBJECTS_DIRECTORY/*.csproj.nuget.*'
    # 3) Path to the directory where restored dependencies are kept.
    - '$NUGET_PACKAGES_DIRECTORY'


build:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:7.0
  artifacts:
    when: on_success
    expire_in: 5 days
    paths:
        - Releases/*.zip
  only:
    - tags
  before_script:
   - 'dotnet tool restore'
   - 'dotnet restore --packages $NUGET_PACKAGES_DIRECTORY'
  script:
    - 'mkdir $VINTAGE_STORY'
    - 'curl -o $VINTAGE_STORY/server.tar.gz https://cdn.vintagestory.at/gamefiles/${SERVER_TYPE}/vs_server_linux-x64_${SERVER_VERSION}.tar.gz'
    - 'tar -xzf $VINTAGE_STORY/server.tar.gz -C $VINTAGE_STORY'
    - 'dotnet run --project ./CakeBuild/CakeBuild.csproj'


release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  dependencies:
    - build
  only:
    - tags
  script:
    - apk add curl
    - |
      curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file Releases/*.zip -uri $URL_FILE

    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG  \
        --assets-link "{\"name\":\"th3essentials.zip\",\"url\":\"${URL_FILE}\"}" 
